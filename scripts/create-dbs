#!/bin/bash

# source: https://github.com/mrbaseman/parse_yaml.git
parse_yaml() {
    local yaml_file=$1
    local prefix=$2
    local s
    local w
    local fs

    s='[[:space:]]*'
    w='[a-zA-Z0-9_.-]*'
    fs="$(echo @ | tr @ '\034')"

    (
        sed -e '/- [^\â€œ]'"[^\']"'.*: /s|\([ ]*\)- \([[:space:]]*\)|\1-\'$'\n''  \1\2|g' |
            sed -ne '/^--/s|--||g; s|\"|\\\"|g; s/[[:space:]]*$//g;' \
                -e 's/\$/\\\$/g' \
                -e "/#.*[\"\']/!s| #.*||g; /^#/s|#.*||g;" \
                -e "s|^\($s\)\($w\)$s:$s\"\(.*\)\"$s\$|\1$fs\2$fs\3|p" \
                -e "s|^\($s\)\($w\)${s}[:-]$s\(.*\)$s\$|\1$fs\2$fs\3|p" |
            awk -F"$fs" '{
            indent = length($1)/2;
            if (length($2) == 0) { conj[indent]="+";} else {conj[indent]="";}
            vname[indent] = $2;
            for (i in vname) {if (i > indent) {delete vname[i]}}
                if (length($3) > 0) {
                    vn=""; for (i=0; i<indent; i++) {vn=(vn)(vname[i])("_")}
                    #printf("%s%s%s%s=(\"%s\")\n", "'"$prefix"'",vn, $2, conj[indent-1], $3);
					service = vn$2
					gsub("-", "_", service)
					
					if(service ~ /^services_.*dependencies_database$/) {
						service = substr(service, 10, length(service)-31);
						print service

					}
				
                }
            }' |
            sed -e 's/_=/+=/g' |
            awk 'BEGIN {
                FS="=";
                OFS="="
            }
            /(-|\.).*=/ {
                gsub("-|\\.", "_", $1)
            }
            { print }'
    ) <"$yaml_file"
}

dbs=$(printf '%s\n' "" | parse_yaml "./workspace.yaml")

for db in $dbs; do
    printf "Create database %-50s" "${db}"
    elc --svc=database psql -Upostgres -c "create database ${db};" &> /dev/null
    elc --svc=database psql -Upostgres -c "create database ${db}_test;" &> /dev/null
    echo "    [OK]"
done

echo ""

printf "Create extension postgis for %-37s" "logistic"
elc --svc=database psql -Upostgres logistic -c "create extension if not exists postgis;" &> /dev/null
elc --svc=database psql -Upostgres logistic_test -c "create extension if not exists postgis;" &> /dev/null
echo "    [OK]"